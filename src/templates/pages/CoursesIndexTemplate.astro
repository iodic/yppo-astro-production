---
import { sanityFetch } from "@/lib/utils/sanityFetch"

import Base from "@/layouts/Base.astro"
import Shape from "@/components/Shape.astro"
import PageHeader from "@/components/PageHeader.astro"
import Blogs from "@/components/Blogs.astro"
import FeaturedBlog from "@/components/blog/FeaturedBlog.astro"
import Pagination from "@/layouts/components/Pagination.astro"
import Cta from "@/partials/Cta.astro"

const { lang } = Astro.props

const coursesPageData = await sanityFetch({
  type: "coursesPage",
  lang,
  object: `{
      title,
      pageMetadata {
        ...,
        "metaImage": metaImage.asset->url,
      },
      heroSection,
      generalText,
      ctaBanner
  }`
})

const { title, pageMetadata, heroSection, generalText, ctaBanner } = coursesPageData[0] || {}
const { metaTitle, metaDescription, metaImage, noIndex, canonicalUrl } = pageMetadata || {}

const featuredPost = await sanityFetch({
  type: "course",
  query: "featured == true",
  lang
})

const recentPost = await sanityFetch({
  type: "course",
  query: "featured != true",
  lang,
  pipe: "order(_createdAt desc)"
})

let postTagsArrays = recentPost.map((post: any) => post.tags)
let allCategories: string[] = []
postTagsArrays?.map((tagArray: any[]) => {
  tagArray?.map(tag => {
    if (allCategories.indexOf(tag) === -1) {
      allCategories.push(tag)
    }
  })
})

const totalPages = Math.ceil(recentPost.length / 6)
const currentPosts = recentPost.slice(0, 6)
---

<Base
  title={title && title}
  metaTitle={metaTitle && metaTitle}
  description={metaDescription && metaDescription}
  metaImage={metaImage && metaImage}
  noIndex={noIndex && noIndex}
  canonical={canonicalUrl && canonicalUrl}
  lang={lang}
>
  <Shape />

  <section class="page-hero pt-16">
    <div class="container">
      <PageHeader pageData={{ title, heroSection }} />
    </div>
  </section>

  <section class="section">
    <div class="container">
      {featuredPost?.length ? <FeaturedBlog posts={featuredPost} title={generalText?.featuredPosts} lang={lang} /> : null}

      {
        currentPosts?.length ? (
          <>
            {generalText?.recentPosts && <h2 class="h4 mb-4">{generalText?.recentPosts}</h2>}
            <Blogs posts={currentPosts} lang={lang} />
          </>
        ) : null
      }

      <Pagination section={"courses"} currentPage={1} totalPages={totalPages} textPrevious={generalText?.previous} textNext={generalText?.next} />
    </div>
  </section>

  {ctaBanner && <Cta ctaBanner={ctaBanner} />}
</Base>
