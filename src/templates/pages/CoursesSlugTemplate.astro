---
import { sanityClient } from "sanity:client"
import { sanityFetch } from "@/lib/utils/sanityFetch"

import config from "@/config/config.json"

import Base from "@/layouts/Base.astro"
import Blogs from "@/components/Blogs.astro"
import PageHeader from "@/components/PageHeader.astro"
import Shape from "@/components/Shape.astro"
import Pagination from "@/layouts/components/Pagination.astro"

const { slug, lang } = Astro.props

const coursesPageData = await sanityFetch({
  type: "coursesPage",
  lang,
  object: `{
      title,
      pageMetadata {
        ...,
        "metaImage": metaImage.asset->url,
      },
      heroSection,
      generalText
  }`
})

const { title, pageMetadata, heroSection, generalText } = coursesPageData[0] || {}
const { metaTitle, metaDescription, metaImage, noIndex, canonicalUrl } = pageMetadata || {}

const recentPost = await sanityClient.fetch(`*[_type == 'course' && featured != false && language == '${lang}'] | order(_createdAt desc)`)

const totalPages = Math.ceil(recentPost.length / 6)
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1
const indexOfLastPost = currentPage * config.settings.pagination
const indexOfFirstPost = indexOfLastPost - config.settings.pagination
const currentPosts = recentPost.slice(indexOfFirstPost, indexOfLastPost)
---

<Base
  title={title && title}
  meta_title={metaTitle && metaTitle}
  description={metaDescription && metaDescription}
  image={metaImage && metaImage}
  noindex={noIndex && noIndex}
  canonical={canonicalUrl && canonicalUrl}
>
  <Shape />

  <section class="page-hero pt-16">
    <div class="container">
      <PageHeader pageData={{ title: currentPage > 1 ? `${title} / ${currentPage}` : title, heroSection }} />
    </div>
  </section>

  <section class="section">
    <div class="container">
      {generalText?.recentPosts && <h2 class="h4 mb-4">{generalText?.recentPosts}</h2>}

      <Blogs posts={currentPosts} lang={lang} />

      <Pagination
        section={config.settings.blog_folder}
        totalPages={totalPages}
        currentPage={currentPage}
        textPrevious={generalText?.previous}
        textNext={generalText?.next}
      />
    </div>
  </section>
</Base>
