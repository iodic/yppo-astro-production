---
import Blogs from "@/components/Blogs.astro";
import PageHeader from "@/components/PageHeader.astro";
import Shape from "@/components/Shape.astro";
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import Pagination from "@/layouts/components/Pagination.astro";
import { sanityClient } from "sanity:client";

export async function getStaticPaths() {
  const posts = await sanityClient.fetch(
    `*[_type == 'course' && featured != false] | order(_createdAt desc)`
  );

  const totalPages = Math.ceil(posts.length / config.settings.pagination);
  const paths = [];

  for (let i = 1; i < totalPages; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}

const blogIndex = {
  collection: "courses",
  data: {
    title: "Courses",
    page_title:
      "Deepen your conflict management skills with our curated e-courses.",
  },
};

const { slug } = Astro.params;
const recentPost = await sanityClient.fetch(
  `*[_type == 'course' && featured != false] | order(_createdAt desc)`
);

const totalPages = Math.ceil(recentPost.length / 6);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastPost = currentPage * config.settings.pagination;
const indexOfFirstPost = indexOfLastPost - config.settings.pagination;
const currentPosts = recentPost.slice(indexOfFirstPost, indexOfLastPost);
const page_data = {
  index_title: blogIndex.data.title,
  slug: `page / ${slug}`,
};
---

<Base title={blogIndex.data.title}>
  <Shape />
  <section class="page-hero pt-16">
    <div class="container">
      <PageHeader page_data={page_data} />
    </div>
  </section>
  <section class="section">
    <div class="container">
      <h2 class="h4 mb-4">Recent Posts</h2>
      <Blogs posts={currentPosts} />
      <Pagination
        section={config.settings.blog_folder}
        totalPages={totalPages}
        currentPage={currentPage}
      />
    </div>
  </section>
</Base>
