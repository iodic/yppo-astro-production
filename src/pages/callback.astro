<html>
  <head>
    <title>OAuth Callback Handler</title>
  </head>
  <body>
    <script>
      function handleAuthCallback() {
        const queryString = window.location.search;
        const urlParams = new URLSearchParams(queryString);
        const code = urlParams.get("code");

        if (code) {
          exchangeCodeForToken(code);
        } else {
          console.error("Error: Authorization code not received.");
        }
      }

      function exchangeCodeForToken(code:string) {
        const clientId = "A0USaYg7dVEdtVPztz5TBThpbOwk9xCqXKx2p9g0zwo";
        const clientSecret = "B05vhMaEQvDLaS01NySCvjVzhZU5PlgwYhraiIP1lgw";
        const redirectUri = encodeURIComponent(
          "https://yppo.websitetotal.com/callback/"
        );
        const tokenUri = "https://yppousers.websitetotal.com/oauth/token";

        const body = `grant_type=authorization_code&code=${code}&redirect_uri=${redirectUri}&client_id=${clientId}&client_secret=${clientSecret}`;

        fetch(tokenUri, {
          method: "POST",
          headers: {
            "Content-Type": "application/x-www-form-urlencoded",
          },
          body: body,
        })
          .then((response) => response.json())
          .then((data) => {
            console.log("Token received:", data);
            const userInfo = parseJwt(data.access_token);
            console.log(userInfo);
          })
          .catch((error) => {
            console.error("Error exchanging token:", error);
          });
      }

      if (window.location.search.includes("code=")) {
        handleAuthCallback();
      }

      function parseJwt(token:any) {
        try {
          const base64Url = token.split(".")[1];
          const base64 = base64Url.replace(/-/g, "+").replace(/_/g, "/");
          const jsonPayload = decodeURIComponent(
            atob(base64)
              .split("")
              .map(function (c) {
                return "%" + ("00" + c.charCodeAt(0).toString(16)).slice(-2);
              })
              .join("")
          );

          return JSON.parse(jsonPayload);
        } catch (e) {
          console.error("Error decoding JWT:", e);
          return null;
        }
      }
    </script>
  </body>
</html>
